<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.1214.2200                               -->
<workbook source-build='2021.1.9 (20211.21.1214.2200)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
        <calculation class='tableau' formula='9' />
        <range max='10' min='1' />
      </column>
      <column caption='select top categories' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <members>
          <member value='1' />
          <member value='2' />
          <member value='3' />
          <member value='4' />
          <member value='5' />
          <member value='6' />
        </members>
      </column>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0jqvb9511fcucy16wggcl0ugwput'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Admin/Documents/My Tableau Repository/Datasources/2021.1/en_US-US/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0jqvb9511fcucy16wggcl0ugwput' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0jqvb9511fcucy16wggcl0ugwput' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Sales 2020' datatype='real' name='[Calculation_1113515039951650824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date]) = 2020 THEN [Sales] END' />
      </column>
      <column caption='Sales 2021' datatype='real' name='[Calculation_1113515039951810569]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF YEAR([Order Date]) = 2021 THEN [Sales] END' />
      </column>
      <column caption='Sales Status' datatype='boolean' name='[Calculation_1113515039952928778]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Calculation_1113515039951810569]) &gt; SUM([Calculation_1113515039951650824])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='date' fiscal-year-start='4' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_FA8486CFD25348A5A8C654C6B8B1E48D]' role='measure' type='quantitative' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1113515039952928778]' derivation='User' name='[usr:Calculation_1113515039952928778:nk]' pivot='key' type='nominal' />
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Calculation_1113515039952928778:nk]' type='palette'>
            <map to='#209313'>
              <bucket>true</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#de2810'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_FA8486CFD25348A5A8C654C6B8B1E48D'>
            <properties context=''>
              <relation connection='excel-direct.0jqvb9511fcucy16wggcl0ugwput' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Tooltip (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action - Bar chart]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Tooltip (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{D6B411D0-55AE-40D5-A32A-F8492FD1D52A}' />
    </worksheet>
    <worksheet name='Bullet Graph'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column caption='Sales 2020' datatype='real' name='[Calculation_1113515039951650824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = 2020 THEN [Sales] END' />
            </column>
            <column caption='Sales 2021' datatype='real' name='[Calculation_1113515039951810569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = 2021 THEN [Sales] END' />
            </column>
            <column caption='Sales Status' datatype='boolean' name='[Calculation_1113515039952928778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Calculation_1113515039951810569]) &gt; SUM([Calculation_1113515039951650824])' />
            </column>
            <column datatype='date' fiscal-year-start='4' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1113515039951650824]' derivation='Sum' name='[sum:Calculation_1113515039951650824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113515039951810569]' derivation='Sum' name='[sum:Calculation_1113515039951810569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113515039952928778]' derivation='User' name='[usr:Calculation_1113515039952928778:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[usr:Calculation_1113515039952928778:nk]' />
              <lod column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951650824:qk]' />
            </encodings>
            <reference-line axis-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951810569:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951650824:qk]' z-order='2' />
            <reference-line axis-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951810569:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951650824:qk]' z-order='1'>
              <reference-line-value percentage='20' />
              <reference-line-value percentage='40' />
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951810569:qk]</cols>
      </table>
      <simple-id uuid='{A2D103A6-B2D9-435B-904F-7A2699C36CB1}' />
    </worksheet>
    <worksheet name='Bullete Graph - Quaters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column caption='Sales 2020' datatype='real' name='[Calculation_1113515039951650824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = 2020 THEN [Sales] END' />
            </column>
            <column caption='Sales 2021' datatype='real' name='[Calculation_1113515039951810569]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF YEAR([Order Date]) = 2021 THEN [Sales] END' />
            </column>
            <column caption='Sales Status' datatype='boolean' name='[Calculation_1113515039952928778]' role='measure' type='nominal'>
              <calculation class='tableau' formula='SUM([Calculation_1113515039951810569]) &gt; SUM([Calculation_1113515039951650824])' />
            </column>
            <column datatype='date' fiscal-year-start='4' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1113515039951650824]' derivation='Sum' name='[sum:Calculation_1113515039951650824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113515039951810569]' derivation='Sum' name='[sum:Calculation_1113515039951810569:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1113515039952928778]' derivation='User' name='[usr:Calculation_1113515039952928778:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[usr:Calculation_1113515039952928778:nk]' />
              <lod column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951810569:qk]' />
            </encodings>
            <reference-line axis-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951650824:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' value-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951810569:qk]' z-order='2' />
            <reference-line axis-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951650824:qk]' enable-instant-analytics='true' fill-above='true' fill-below='true' formula='average' id='refline1' label-type='none' percentage-bands='true' probability='95' scope='per-cell' symmetric='false' value-column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951810569:qk]' z-order='1'>
              <reference-line-value percentage='60' />
              <reference-line-value percentage='80' />
            </reference-line>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</rows>
        <cols>([federated.17pv6r00z1v8ad175heoj1m9ncmw].[qr:Order Date:ok] * [federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Calculation_1113515039951650824:qk])</cols>
      </table>
      <simple-id uuid='{C25675C4-F4FD-4046-A3E3-9C0A9C6F5D1A}' />
    </worksheet>
    <worksheet name='Calender graphs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ff0000'>Sales for &lt;</run>
            <run bold='true' fontcolor='#ff0000'>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[my:Order Date:ok]</run>
            <run bold='true' fontcolor='#ff0000'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='date' fiscal-year-start='4' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Day' name='[dy:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='MY' name='[my:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Weekday' name='[wd:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Week' name='[wk:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[my:Order Date:ok]'>
            <groupfilter function='member' level='[my:Order Date:ok]' member='201809' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[my:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[dy:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[wk:Order Date:ok]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[wd:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{75C2D745-97AB-4CA2-91F2-AB557256DD7F}' />
    </worksheet>
    <worksheet name='Column chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{6EF98C8B-B574-4370-8A72-8ED8B777E7DB}' />
    </worksheet>
    <worksheet name='Filter (Starts and Ends WIth)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]'>
            <groupfilter expression='STARTSWITH([Sub-Category],&apos;S&apos;)&#13;&#10;and&#13;&#10;ENDSWITH([Sub-Category],&apos;ES&apos;)' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5448D48A-37F2-4B4A-97CD-7415FA13AF26}' />
    </worksheet>
    <worksheet name='Filter above 2 Lakhs'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]'>
            <groupfilter expression='SUM([Sales]) &gt;= 200000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{9098403B-5C9E-4AB9-8A75-99656BEC5BD9}' />
    </worksheet>
    <worksheet name='Filter with Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='9'>
              <calculation class='tableau' formula='9' />
              <range max='10' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{BB5F58CB-A94B-4B5B-A31E-C2500A80AA83}' />
    </worksheet>
    <worksheet name='Filter with Parameter 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select top categories' datatype='integer' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{1221E10C-FBA8-4427-A3AF-96407DC25EBC}' />
    </worksheet>
    <worksheet name='Filter with WildCards'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]'>
            <groupfilter expression='STARTSWITH([Sub-Category], &apos;A&apos;)' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='A' user:ui-pattern_type='starts-with'>
              <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:Sub-Category:nk]' to='&quot;Tables&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{2C0C3B86-672F-4F1C-8619-CAD21D945C70}' />
    </worksheet>
    <worksheet name='Filters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='date' fiscal-year-start='4' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Order Date:qk]' included-values='in-range'>
            <min>#2018-01-03#</min>
            <max>#2021-12-30#</max>
          </filter>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[yr:Order Date:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{DD42BD05-7524-4021-9084-C5A8FA7EBFC7}' />
    </worksheet>
    <worksheet name='Getting Chart with Tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Longitude (generated)]' field-type='quantitative' max='-7134432.7690936672' min='-14206738.130375601' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Latitude (generated)]' field-type='quantitative' max='6620969.9933355432' min='2539787.6344436305' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:State:nk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <lod column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:State:nk]' />
              <geometry column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'><![CDATA[<Sheet name="Bar chart" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Profit:&#9;</run>
                <run bold='true'><![CDATA[<[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Latitude (generated)]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{02D3942D-BC08-44BF-A44B-D490CBAE419C}' />
    </worksheet>
    <worksheet name='Getting data quater wise'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='date' fiscal-year-start='4' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.17pv6r00z1v8ad175heoj1m9ncmw].[qr:Order Date:ok] / [federated.17pv6r00z1v8ad175heoj1m9ncmw].[mn:Order Date:ok])</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{5C82041B-779E-42DA-B719-7206AAAE280A}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:State:nk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <lod column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:State:nk]' />
              <geometry column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Latitude (generated)]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3B434752-C78E-456B-9FD9-5AF027A429CB}' />
    </worksheet>
    <worksheet name='Pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' />
              <wedge-size column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
              <size column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[pcto:sum:Sales:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4FC415AD-CE47-43FA-BB51-35B8F4017219}' />
    </worksheet>
    <worksheet name='Scatter plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Quantity:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-transparency' value='157' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{7FD67562-8B32-4AF7-893F-C7364CA4D800}' />
    </worksheet>
    <worksheet name='Stacked Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{1F85D871-8D89-4BE5-8156-5AB6CE595CC5}' />
    </worksheet>
    <worksheet name='Stacked Column chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{4E3BD00A-94DD-4AC8-88D3-DEC00F2FEC1F}' />
    </worksheet>
    <worksheet name='Top 6 sub-cat'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]'>
            <groupfilter count='6' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]</rows>
        <cols>[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{1AFB8BCB-0967-4CB9-AE16-65334E4F1EE6}' />
    </worksheet>
    <worksheet name='Tree Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <size column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2C926428-2B15-4686-83D8-CEE548610C46}' />
    </worksheet>
    <worksheet name='Tree map Shapes'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.17pv6r00z1v8ad175heoj1m9ncmw' />
          </datasources>
          <datasource-dependencies datasource='federated.17pv6r00z1v8ad175heoj1m9ncmw'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' />
              <size column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' />
              <text column='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0C68020D-06CD-42E6-B44E-BA3B03C781AF}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Column chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{136ABA48-D7DC-4716-8812-13DD987C31B3}' />
    </window>
    <window class='worksheet' name='Bar chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BB8A9A89-364A-4C57-9232-38F58A3D44B7}' />
    </window>
    <window class='worksheet' name='Pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{365F8FAA-3BD8-45C6-8364-5EFAAD72AE9F}' />
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{96E08487-2290-4F9B-84E2-E7FE9CF98D36}' />
    </window>
    <window class='worksheet' name='Stacked Column chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{013A6D6E-306F-45E3-8C52-78ACF434310D}' />
    </window>
    <window class='worksheet' name='Stacked Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C2800975-5263-48C3-B30F-9D8B40662168}' />
    </window>
    <window class='worksheet' name='Filter above 2 Lakhs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{0DFF1D44-43A9-4411-9B46-BC1C3766B076}' />
    </window>
    <window class='worksheet' name='Top 6 sub-cat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{8C44E0DD-A07D-4EF6-9AA5-404AB2B02ED3}' />
    </window>
    <window class='worksheet' name='Filter with Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F3939840-E265-45CD-9608-9F28880F9B16}' />
    </window>
    <window class='worksheet' name='Filter with Parameter 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{A331BD19-0E68-4666-9BB0-1E9DCBE9EC4E}' />
    </window>
    <window class='worksheet' name='Filter with WildCards'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7D2740CB-9164-49C7-AD68-4451D3F35BB9}' />
    </window>
    <window class='worksheet' name='Filter (Starts and Ends WIth)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6053CB8C-2164-47E8-B5FA-96B86E72FDC2}' />
    </window>
    <window class='worksheet' maximized='true' name='Getting Chart with Tooltip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7758D486-3974-4E5F-ADB0-6E9D1BF999D7}' />
    </window>
    <window class='worksheet' name='Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5DBFC868-0B2C-400C-B8FE-1FE9735964CD}' />
    </window>
    <window class='worksheet' name='Tree map Shapes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AEB6154A-726F-40E8-B2F1-58E8D77C8F37}' />
    </window>
    <window class='worksheet' name='Scatter plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Quantity:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6DC4B798-5A38-4246-AFF1-312D5729EECE}' />
    </window>
    <window class='worksheet' name='Bullet Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[usr:Calculation_1113515039952928778:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C51A4169-ACDD-41BF-A81B-605C05133F04}' />
    </window>
    <window class='worksheet' name='Bullete Graph - Quaters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[usr:Calculation_1113515039952928778:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{B0DFC316-E152-4B99-8835-9608663A9C8F}' />
    </window>
    <window class='worksheet' name='Getting data quater wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{40A572B9-59B4-4842-B3AF-27D72CA7C122}' />
    </window>
    <window class='worksheet' name='Calender graphs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[my:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.17pv6r00z1v8ad175heoj1m9ncmw].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{A2E2AB6D-82F7-438C-A312-10B339072409}' />
    </window>
    <window class='worksheet' name='Filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C088609E-3506-4A5C-9C27-04C7A1BC9C2F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Column chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z5AcZ56f+WSW7bLdXW2qLdp7tIN3BEgQJDEkZzgczmpHGq6RtCvthfak
      U9zdh/tyug8XcXFGcXshnfZCe4qNkGL3dgyXJIZuaAGSIHzDA+3Q3pf3Js19AAhOE66ruhtV
      3Z1PBCKqkflm/fKt/OVr/+8rqKqqoqGxRRFzLUBDI5doBtDY0mgG0NjSaAbQ2NJoBtB4asSC
      S9y8cZNANLns/xcXFx84d2lmjFsjE0jK+vbRaAbQeDooSd5/5zfEZInZuaVlh06cOLHs79DU
      AG99epVkIo4sKwCoisw77y4/by3Qr/kVNTQehqCnstTGtau3OHLsKG+/9Rue2dfCxTtJ4t4p
      /ub//fc4Wg/RXVvM1PkL9D/3Jr3VZnxjl/l3v34PfWkfE1dPUlJbx/DJ95nwJ3nlpz/mzKdf
      ooS97Hr9da6cOoOqqnTUF3FpIk5biQ59/V6it7/m2Tf+EQ6D8IAsrQTQeDqoKg19h/nJ0Xbe
      PfE56XSKRCRMSlYpKK7mlaN7WFqcx+PxUVJRxvDtUWKxKMM3rlHb0UvM76WzvZ09naVMLqkc
      e+FZzJEFCtsP0l1fRmBpgfr+w7SXiSwGU+x45kWO/eAYs5c/Qi5sfujDD1oJoPHUEPBM3GRw
      OsBrrx0nNHKWK+Mhmls6KJXdfHxlgZePHqXMaUZVOoie/oyPv/Kxu72XucFp9u/tpZgFzt2M
      8ONXdzM0G6D2wC50v3mXkyPzvPnKP2Ti9Bek3Ts4WGFCctpQdQLGeJSe/TsfrUobCdbYqMhS
      lAunz6EvqWNHR/0Dx6P+WUbnU3S31z3yGjkzgKIoiKJWA9PILTl7AmVZztVXa2jcZ/UGUGTG
      RkdJSgre2TEuXh9BVVWWpka4fOsOCikCgShSPII3FF0DyRoaa8eqG8GBhXGuD47gKC1nZMpL
      nUvg2sgsiXCCSnuaO7Mmkn4JUktUtfagqirf1roURVn1DWhorIbVGUCOM76QpLm2FEVJYneU
      Ud5o5s4X85Q0uXAVGplYWGJycBhnfQedFgOKotw3gWYAjVyzKgMkIwF8vnm8CzM06l2kgwvM
      DAnYaqvwLS5hiEoYnBXUtvYhSosshRKUOMyI3H376/VaL6xGblmTXqBw0I/J6iTqmWY6qNDV
      sg3f3DjzUR3tzRWEg2lsBeCPKbgKbQhAOp3GYDCs/g40NFZBzrpBNQNo5ANaR7zGlkarhG9i
      7lw7x8DtO6Az07P3WZoqnbmWlHdoJcCmxcsHJ4dxm6CivZPP3voFsVxLykM0A2xaHFQWpRnx
      p6lzV9Dc0qAV9w9BawRvWlTSySQpWWV+eIjizk4K9XoePil466KVAJuWIP/P//5/8JuPPuVv
      /uqv+OzCTaRcS8pDNANsWgr5+Z+8iV2Ig76QHXu70crbB9GqhZsWBb3Zyf4jx0gvBpAiMVSb
      RasCfQ+tBNi0hPnrv/gLPvn6AoO3b3F7ZBJtAvqDaAbYtDj5k3/95xSpQZLY6e5t04r7h6D1
      Am0BlmamWfDM4axqo7rErlWDfgftpbCJUVUFVRVwud0YzUYiUirXkvKO1RlATXH1/AX8KZGe
      /j5mb11kMZyivW8v4akbzIVh5652fAsJnAUpQoqVyhL7GknXeDxpTvx/f4NqNBFLicimIn72
      +jHt7f89VtkG0NHSvZNGl5GlQJSUwcGRI0coEqJEdE666h1MzSwS8AcZvjNDUaF1bVRrrIAA
      k14z5WqAoq69SPNjxHMtKQ9ZXQkg6PDPDjLmSdBcYSSe9PPZxx9SVt1GgdWM2WJAjviYGh7G
      sa0Fk05ElmUURUFRFFIprUheP5zsajOxQDv2uetUbd+BIZVCy/HlrM4AiRCzgQRmMYknEEEQ
      zdjtEqLRiHdiBM+4TN32LmpabDiMASbmA9RVFKLT6bRG8LoTZ/jOAs4qCz3PPsuZE++RNO7A
      kWtZecbqDGCy0dbSjKyK2KwWUmV2UjLYbRbSVYWkZAGr1USZTUWvqyQta2twPT1iBFN23tjf
      yW9PncYzt6iNAzyEVVaBRKy27xq1ZosV873PRrMF473P377ojdqow1PExUtHtyPbKtjf7ueM
      UIAl15LyEK0bdNMS59OPPqXk8lliBbWk/H5t1PMhaHmyaYkiGStpraikva8bfTJM8smJthza
      SPAmZn5+HrfbjSqnGByZpLW1SRsH+B6aATYJiqriCWQW9Oi0mjAZt3YteGvf/SYikZL4k/8t
      sy2E/oefH2RPR/U6KdoYaG0AjS2NZgCNLY1mAI0tjWYAjS2NZgCNLY1mAI0tjWYAjS3N6gyg
      StweOMfX5y4TT8ssTAxy+uINZEVl9s5Nzl2+jawm8XrDpKIBlvyRNZKtobE2rHIgTKGyaTuF
      c4OMzS0RWYzR4Ra5OjiFlBKoK0ozOrNIOqAwm1qirrN3bVRraKwRq5wObSS6dIMbk0G6dlRA
      1EVhtZnEvT3C7IVGfAtLTA4N46xvx27SaxFh60Q6nfnCh5Ikb/nfYHUGSEZIGJy0VCWY88gk
      /VMMX4HChia8s1NIPgmzu47a1n6M6hJz/hjuIosWEbYOSGrm09z0eh1Go/HJJ25iVmcAgwm9
      lCBhKqVzm5ukS2QxotJWU0bIKuOL66grdxG1SlhMpYQS2q6QGvnF6gwgGqipb7r/p7HYjb34
      7mdnSSXf7kdis939mkLtha+RZ2jdoBpbGs0AGlsazQAaWxrNABpbGs0AGlsazQAaWxrNABpb
      Gs0AGlsazQAaWxrNABpbGm1doHVCSsZIYyIV8YC5CKd1a086y1c0A6wLUf7yL/6SCreZkLOD
      1NQwf/gv/vT+ytka+cOqq0D+xWluDY2RkmQWp8e4fv06gZhEYHGakfFZFNJEIgnkZIxQNLEW
      mjcAaURbBTu6e+jt7qBAJ5P5bH2Np8EqS4AEXn8KmxpgdM5JZHaR+sZGjHKYq+MLFBVITCwI
      xDxp9LIHV33n2qjOewr5+c9fweFwsE2Vcb54HG13tPxklQYwU1NdzPCdOLWuAq4MerlxU6Kp
      sQlXhZvqQiMTC0tMDg5T2NBBq920RSLCFJKxKLORCKBy9uNPsP3xH1C4jt+oRYRlxyoNkGJ4
      ZJqmjnaMOon23v0UKLNcGfdjMKk45DSiuZjall6U5AKBWJpCi2ELRITFefuXv2b7rp2Aysyc
      B9FoZD2bwVpEWHaszgBSmkjIx5mvv6S+ox/VN85gUGDXru34JgaZCpnp215KoCCN01rMUiSG
      0+LcAmvUF3D02PNUtbUhB4M4LFatCpSnrM4Aeit7Dz3z3d9lvdTd++iub8d977PLZQKgYst0
      g0S4dvkqo1NTXHr/fRr+wR/R9OREGjlAGwhbFwpornOxFEziLq2kq6+dzVrZ2+ho4wDrgo6O
      vUdpCC1yIhjELkuoqhFh89f9NhxaCbCOmB1l/PSf/EOiN89z5too2poY+YdWAqwTk8PXSBpd
      yOFFZGcD+5trci1J4yFoJcC64Ofv3/2GidN/z4UFlbMfniCca0kaDyUvSwBZShGPJzEWWDDq
      dbmWkwVmStwu+g72EDWX8tXk1XUdA9DInhUYQGJ8bJrA7Ai6qh6215Wuq6Dw9HV++fkt6mtK
      8E2P03j4dXprnE9OmFcUcGhHAwNDk4iM0bjzEKZcS9J4KCuoAvk5+dEprk6Mc+PizXUXNHXr
      JmUdfezauYs9/ZVcGRhb9+9cewK88+FFdu/Zw+7du7jy+YdoC8PnJysoAUro6a7GUlaDJNrX
      XVDHcz8kcOoUZ86MI2Hh917eiEuq22mtMfLbjz/FoCZwNHRSkGtJGg9lBSWAzJ3Ba0zOzjMz
      61l3Qemwl1lvBINRh2/mDrP+jTiFWsRmd2BzlnLs1Z/QWqgjnmtJGg9lBQaI4AulmRsfw+Nf
      /76Ma6e+oHLnHi6fvsTR49v5/OOBdf/OtcfDpaEEuxrtfHnuBkNXr7ERbbwVWIEBCjn+youU
      u6s5erhv3QW17dnFyKmT1LY1cebkTfr3daz7d649LrpaXFhrOukoSRPAqvUC5SmPbQOEvWP8
      8u8+uP/2UuzlvLRveVBLMh4hllRwOOzIqRixlIrTbiWViJKQBBz2AqS0gk4ESQGj4fHNDkVW
      0JkMOB02fAsh9OJGHKoQOXzseUCgpnUHf9rSn2tBWSEno4yMzeAqtjA0vkR/fw9m/Ub8PR7N
      Y59Gu6uef/xfvcm7v3yfkvJqLK6i752hEg36GB+fxFnXTnh6FFOBjjl9OanEIqJOR2FJMSGP
      jE4NUVbfQvETDDBz6yrl2/cRu32RwwfqeW/gDt21Pau9z3VFUVT+5//8ZUZpfvxMG131Zeuk
      aG24dOJvmalo49rfX+H5XaWcHCjmxV3bci1rTVlBL5BAPJ7gxtXTGL3Q21K57JheJ2BwVlDh
      FEn4y2lrLeCbU/OUNJZTU2hgYsHD5NAIzvpWWq3mJ0aEbdv7ImWKAWvTD4h5x+httZNMpvJ6
      IpmiqlwYnM0ozYGuKlJVaxcjth4RYc1793Pr8+vs29nCXChEf49r00WQPd4AqoqsWPi9N99k
      cX6ewhL38uNKhPMDI9Q11pJI6Ql7J7h6TqG0uQvPxDDROQlXQwu1rXYsopdpT5jqUvvjI8KM
      xvurJ+jLaghfP0OoZj+l1vwNJpCVzKe56fX6NY3GWo+IMNVeTENjPR3d2zHLATyxNEajbTUy
      847HGiDqmeD8WJQ63QwnzozQuvsFXtj1u6EdJjo6m5EUFb3BRHfPdoJxFXdpEZU2kXBaoLzE
      QdImY9SXE0+rTxQ0ceVrzs8kOf78EaxGC4eOPbfae9TIkjNv/z3iwZc4+dkpdjSbGZgrprbi
      +9Xgjc1jWzTJRBjPwhwfnxnnD//4hwRm5r6X2kBFVTU1NTU4LEYs9iIqyooRBAGrsxh3SREC
      OsxmI6LeiLXA9MRwyNmhMarb6zn1wVu89/GXeENaD3quaO5tJB2z8tLeJj4+eRmDZfP1ZT22
      BCiqbKXLl0TseQ1jSmbXnu3rLshWXIKxsIy9P3qDWGABXyIFDm0cNRcoxhp2tZUycWkId10H
      e7sbci1pzXlsCSDojLT17KSltgxzYQX1Feu5sMddymrc6GWV85+8zVsnPsCrFQA54+rnn7Eo
      B/nizCiNrjTfDNzJtaQ1J+86dT1jtxmeX2RkzM+zz7YycH4415K2LO37+7n58RcYSyrQiUZq
      a9xPTrTByLt4gLZnX2Huow8ISgm+uuDn1Zeez7WkLUt97z7q781FjPgm+PT0JVqrDmPU5XGf
      dIbknQEUVUff/ufoA9KJMT7+6BK//5O9uZa1RVFJJeKEo0mcRTX84LkSZFTYRCs75Z0BFq6d
      4qNJgY4KO+nEON5wRa4lbVnmbnzJZ9dnmZ7y4nIYeeGnb1Jrybta86rIOwNU9exmf2GC9qYK
      5HQLRWWxXEvKGVI6STyewmyxYsjBHJw7Vwap33uQYOgWx/YVcvX6BLWHWp+6jvUk7wwgGIpo
      vzfWpjO42N7pyq2gHOEfPcevzszQXF3EwuQ4vcfeoNX9dEdhd//wNU6fv8ELP9hNwh/hQF/d
      U/3+p0HODfDB2RH+7tPrKz7fYTPxf/3Xx9dRUX4weukK9bt/xA53AZP6ALeHZml1tzxVDYMX
      vmZoJkUoMsqHHy7w3/9Pf06RbXNFN+fcAMmUhD+y8nCRJ0+mUBm9doEATro7W5i+dYPyzk4s
      qxGZA3a+/nNOfXaSc5MGMFTy0sGn+/ADtO8/yuInn6HY9bR2VrKtZP1DYp82m6tFA4Cf9z69
      jlP1cObqKJdOntyQa/Ik/XNMe+PodTA/OcJS6OnPwtQZ7Tx3/FV66tvp73Oz6N2IOfl4NqEB
      nNS4rVR37aNEmuaOJ5H7Yi4Lzp74gK6XDnLm7CCHdlXzzdnBp65hfuQGX509x+h0kMDkBU5d
      mXjqGtabTWgAHT98/WXklEJVQxv/5F/9GcW5lpQF/S8c4vzbn9DaVsPFqzNs765/6hqU0Bhz
      yUIaGxuprXGzEZcoexKrfDlK3Dh/hrCpgr3bt/H1Zx+T1hXQ1t3P+PXzBBMy/ft34Z2O4TQF
      SVqqqCtf70WuYvyHv/hLqioseC3NSFPD/MG//LMN1wZQZdAZDegEGW84hi4HEUEVfcd5TQaD
      Xoer+DjtWcQc5DurNICezp5ebkx4UBWFlALl1bXYSFFY20J3kZ7J+QXmJ+YIlbrZWedEURRU
      VUVVVSRJyjiY5Nt0jyYJBSXs6G1hhiqGZ2+TkKR1DUpXlCc3zb+PLMuPvY+Ln5yk+9Wf8OFf
      vcXPftjB2YFh6o91Pfp6j82TR2lQlmmYXgqzFFz5uIvFZKC1ZiOWr9+xdtVjUU/fjt3EQlNc
      H05icxWgyCqCqMdW6EJKRZEUFYN49y0iCAKiKCJm+GYTBBAfGyhv5403jlNWWoQwMYrh0DEK
      1z2wPnMDiKL42PvY+6Mf8Iv3v2Tvng4uD/rYc2jvY88XxcwrKKIoLLvmb8/f4b0zK5982FxV
      zP/6Zxt7rtaqt0m9ePY804EYpgIz4alhArE07Tv2sDg0wLlp2LmvF6MQo8SeYnreR32VC1EQ
      kGUZURQRMi7ahScYYIm33vqKN45W8dHAEomZcdp6WlnPISQ1i5X/v30BPAqzq5E/eLMRgERk
      no9+e4qSV57Hbnz4TyaImVdPHtCQ+U/xhN8i/1n1Nqk7Dj3Ljm//rP5uuqx798H7nx31dx+/
      p9OLbMYi+nj3/RGqD/+UOd/0Bm+8RZmYkXj11aMouo39sOUjG7GH8Ak4+MN/9k9RVRVBgCn7
      EUKBKOZC64aawzj41Tv85pqPlmr44IMp/tv/8V/SsO4dCJuPwMIC5vJywtMjTHgSdHZ2UGD4
      7kWyCV8pwv2iXRBEbFYzfq8/i1p6bmnZ9xKHu6pRdHqa2vu0hz9Lzv7618wQ5523PyHtu81n
      55ZHtW3CEiDIf/6//5bmA8/T01ZHUWX9hhwHEHQmdh58no7QPDWVi4xPe6mr3poTA1dDTcc2
      Lr73PkHBictuIV2wvCK+CQ2QIEwJVZYYn3z4HsUVjeze3bXhtimduXmR6wthTAIEF4e4OS1p
      BsiCtn2H8J+5RFknzKcs7OpfvhrfJqwCmairq6SyoYPjL79Me0PFhrxJuyFIUKxix44d9Ha3
      YdYawFlx8d1fEK9oY8eOfpzyNJ+dHV12fBOWAA4cwiwnPvgtRlIk9GW89tL+XIvKGEfzc/xe
      893PuopGOjUDZEVjfw+/OPkZSbeTpVkfB15dHti/CQ0Q4fytAP/qX7+BgMpf/dv/k8hL+3Hk
      WlaGjF04xcWFCBYBQksjpF0HaG/WwkMzZWkhSFVjA8/s6sNaYHxg4HUTGsDOT49384tfvoWB
      NC2HX8aaa0lZUFlh5rbayAv9bgJzFZwd3nyrsj0Nxi8PUfvTV/nitycwFtWyb1cvjt9Z4W4T
      GkDB6Kxi3567Rd2pd96jfUcL67u35dpjqtrN8aq7n13VffygOrd6NiqOsjJcpTX0vFZDcHGG
      WDK12Q0g8e5bb7Pz0EEEwOcPZjFR4elzZWSeWxMr34PNaTVxfG/zOiraHOx+7bX7A6AWp5OY
      P4miWu9XhTahAUy8/OoruLZtwwi4bDY2whDS5ZEF3jp1a8Xn15Y5NQOsAJ3+u0dcTkW4cvEm
      +449g/PenKpNYQBJXv6OL62uAVlBAtx19fc/f4soCIhZTB7T2HhEfPNMLQYQAP/sDaLG5vsP
      P2wSA/z+v/kVaXnlFZ1/8eNdHNvVuI6KNPIF380vOR9vYl+dDVFUkZLysuOrjgi7PXCReEEF
      va1V3Lj4DTP+NHsPHWD8yjk8UYVdB/rwzsYpNEcJ64qpLdsIFRKNzULNvpd5dsaHJCt07DxG
      k7T8kV+lAXQ0tbUzOO1DTseQTWU8v9/E+ct3sJfWsKdFZHpmnshiDI8e+vrr7keDAfejwzJD
      RfleFFnGV1AfvMZqULOICHtQw+ryQc3ifh7QkLmENc3H9WDi3Kd8MZVifnQal11hz6t/RNHv
      7DexSgMI6O+PUKqIog7RoEeRZHQ6EVHUg6IQDfkxFt3dOUZVvwuJzMYA6hpk+lobIJuQyG83
      CvxdTZmgsjwfsrkf5Xv5kLmGtc3H9SCw4MFWXo/Vr/DSoRIujszQWfXdhLjVR4SdOcvoUhhz
      wQGS/jE++lSm/8BBxi6f5ethhb59O0Cy4bJGuTPtoammBJG7P5her884okgQBPT65bIzbc6K
      ovjANVZDNpvk6XS6ZRoEIcN8YHk+6OTMTaj7Xj5kGlX2sN8i3+h5+WfY70zwXN8enGaBsiYD
      ev13IVKrjwh75ujvRIR9Fx9a9sx3m9uVtN3dWG2jDUZpbDwWfBE8oe8F9puKmPeFmX/I+flt
      Xw2NDHn/7Ahvf3l7xedrUww1tjSaATS2NJoBNLY0mgE0tjSaAR6BqiikJQkl44E6jY2E1gv0
      EKKLw7z3+SUmJucoLy/j2I/foMKuBaRsRrQS4CHcOPkl9YePUOwo5diRbXz22cq3cNLYWGgG
      eAj9L7zA+KlTtOzehdNaSe/22lxL0lgnNAM8BElnY8+e3dQWm5iYGeXa9fFcS9rYqDIjt67h
      j6ZzreQBNAM8BM/1k3x6bYpgMEggECCWePr7c20OlvhP/+ldhr88wcBciF//7a/It5zUGsEP
      oXrncxxdSFNbVUwyVoZ1LP/eXBsDG8QmuHA1SaLWjN6SfwsUawZ4CNFwnGjIy63QArHgCLdm
      y+jurMm1rA2IjudeOk5KTiMYLFRWVuXdEpVrVwVSFW5ePM0XX3zBQjDByPWLfPnNReJSjNlZ
      HxHfPLMbZJvN0Mg5zoyFMBgM6HUCaUl+ciKNhzDDf/x3f8f1G0MEInHEPFzdbs1KAFWRSRkc
      HDnSRSrsZU7npKteZWpmkXRYZSHho62nb62+bl2p6D/Kq0GZkmIbcrqCqob8DvrIZ6pa+vnx
      j48xPnSLC+cus/dAf16VAmtXBRJExKSfzz7+kLLqdixWM2aLATniY2p4GMe2Fkx6EVmW70dD
      pVIpZDmzt6uqqqRSy5tSmY7VSrL8wDWWo8Nh05FKpUgngnz+2/McffUFbMaH7zWTzWixJEnL
      NChKhvnA8nxIpzPfJE+S5O9pyHzDwsfnYwkvHuvA7w/hmVmibsculFRqXRvCSobP09qVAGoa
      UVeAwy4jGvR4JkZZmpCp6+qipsWGwxhgYiFAnbsQnU5HOp3GYDCg02W2gZEgCBiNy0dlM21Y
      6XW6B67xu0xdP8dw1Mj+HT1YHZW8/pPjSKIOo/7hWrOJCNPr9cs0ZLrJncDyfJCy2MJUr9d9
      T0Pm0XmPy0eI8e5/+Wtqd+9j8JMP6HVV80JPy7o2PMUMn6c10yKIJpra2khKYLdbkaqLSEoC
      NpuJMpuKXldJOouwvVwwevEqur37+PjErzGXNHBwTzcFj3j4NR5HIX/63/xzvjp5CllfRE8W
      D78spZFkBZUgEaEIl9Gwpj1Ja2cAQcBssWG+97fRbLm/N6/hXqXPmH9toIdicRZRXNvM4dZO
      AvNjzHnCNFQW5VrWhsRaWM6LP/opvf2TFMTjqOYCMtkY9Ornb/H5aIKOBgg7evnR3p413fN5
      gzyST5eO3R2cOfEew9NezHYD3oVAriVtbFSVsuoq7lz8ikvD0xkl7T7yI4721hKKp9ixxg8/
      aAZ4KNdOfk3bs88zc+00k/PT3B6ey7WkDUqUL744h3f0Av/xr/8LQwETvS2ZLXOdjoVIG128
      eOQ1pNFRkmusUDPAQ+h5dh/x2QAHDx9i/MYdyqo34jZ7+UCCgQvXmRgcp+vIs4SmRsl0TP30
      278iajbw2VfXGPjoYyJrrFAbCX4IFncnB8tVBEHg2Ks/y7WcDYyL3/thD59/PYASvsDeF49j
      yvAKta01zImlPNet8u/PXeKFNVaoGQA4dWWCk5cnVnx+od3Mn7++ex0VbRYk9DY3z75wHEjx
      yW8+pu6fvYktgyts276fmXNXuITIj//oTQrXWKFmAGDWG+bC4OyKzy8v2oibLuWCFL/+u1+z
      9/BBIMWSN5DxoOU37/wKw77X6S4x8jd//bfU/vk/X9MtrzQDaKwjFl790Su4GxowIFNoK7nf
      Tb5Smvq28/6pT/GXWLHXtWec/kloBtBYV2oaGu590tHQ0pRx+sr2/fzj1j1Ikkwykbg772UN
      R8LWyQAq8XCQSFqgpNhGKqlg0KmkFAGzMZ+mQmmsJYFwgj/+X97JKM2/+ePD9DS5H3lcVRUk
      ScGgFxgZvEyooJo9XQ1r5oF1MYCSjHD56k30YppESzuh+SQFghdzRTOVmgE2LSpqxhMDn3T6
      0FcnOD0tQzqGTjDzszefWdOpEOsyDpCMpXDV1NLV1U7U72FqaIDFlJWKQq3xqJEZkyOzHHh5
      L/GEGTHiIb7G11+XEkCnF4iEY8R0EUSjlZrm7aTiS0RTEjaT1uzQWDn7XnmZmFDGn/3T1xm4
      fBX7k5NkxLo8jUZbIcW6SYbmRPr7tuE3JimyOlgKhLGWF+VdXKhG/iDJyrIdd4yFVRiBtKzS
      tX076fT3NrnTiava8XN9XseCSF1bL3X3/nS77+7JVL3W9tXYdPyHdy7wyYU7Kz7/v/v9/Rzs
      zn7dJkHNfJe6VfG7EWGiKBKIJPAEY09OeA+dKFJfcXc8UFXvTlcYnfGjZjDEUlZkxWEx3U/v
      C8fxhVZeuzTodGxzO5dpGJnxrTg9gLvYhq3AeD+9NxTHH165BqNeR235dxpU4M6sPyMNFS47
      VrPhvoalYIxgJLHi9GajnupSx30Nigpjc5lpqCqxU2D6TsOiP0ootvIpbw/kYzCOP7LyfHzq
      BviWbyPCskVVVWRZXtUeVZtBw7cvk1xrUFU14+i+tdSQbfqczQZdSWZJqQQp6dH+fHIIn0o8
      Fn9k2fBYDYpMOBJDVRTCkegjT3vSfajqKjTcI52MPzKaThCEFWhQiMcTq9KQSoWp5GsAAAy5
      SURBVMaRHqPhSb+FqsjEE8msNaiquup7eFg+5qwEeCxSgjMXL5OMxhAKHDyzb2fGl5gdvcb0
      rBd/WqWtZx/bXJkNoicC85y6fIfdXQ1cHpziyIFdGWuYGLyMZ9HPoqSju28PVYUZzoVMhfjm
      yjAJ7yLG0loO7OjMWMPo9UsEgyHmkyI7d+2lLNNVrpN+Tl8fJzE/g7mqmf29rRlruH35AolE
      lJmowL69+yi2Zvimjnv46uYMoVCQvv69VDgzvIdUkG+ujpJYmsdYXseB/o77h/KzT1LUYVJi
      GMrrEaXsZoCbCyz4Yj5aG1wYsliPJhoJk4hH8YcT9Pf1ZKXBYrGwFA/T1lCIPsOAcwBEA/qU
      n8LqFkQxu6VZrNYC7iwkaK62o8tGg86ILubBta0NIcu4aJvNzGxQorHSkp0GvQl9bJG2ajf6
      bHp8RCO6hI+imlYEcfn7Pj8NIAiYkFlKprBn2cNlMJoIRCOIkgOyyDRXxTbck15KK6uwGLPL
      pnRKYvuOfiqLCiArA+gwyklCaQl7lgHVqZRM984+yuym7DQoEjpHLd2djVl9P4DZZMIbnqfa
      ZcooHniZBmc99Y0NWeej1eokGJpHVg0E42mcBXdLofyMCJMl/KEwkVAAXyi7EiAc8JFMJQkE
      AiSSma+ZAwLFRRaGblxneCK7kEib1cSlc6cZuHaTaCILDVKCUCROwO8nEH50O+RxOOxGzp8+
      zcD128SzyQfRRGxxlLMXBxif9WalweP1o6Rj+PwB0lIWJZloJjI3yMD1W8SyycdUBE/SyO7e
      TqTgFNdGvtsxOD9LAL2J3j2HmFkKUOLOLIb0W8q3tfCMUAD6AqpdBRmnl2UJFR1ezyyO0uw0
      2FyVNNSrVJc6MBiyyGqjnd69h5iYWaR8W3PGydPxEHHVQn2tG3RGhGxev3oT7e0tJA3FWEzZ
      9dI0d2zHaCvCaCukKNP6P4DBTGdHCyaLE302+WhyUm6ZYGhskpKqRiwljvuH8rIE8Cwtsri4
      SCwaxePLbkWGuTu3UKzlmJMLTCytfJwBgOg8vzrxKQa7C0U00lST3R73kyO3uHT9NoH5ceZ8
      WcxiSYW4MjzBwtQUtweHMk6uN9koLS3FXVZGqasIvS4LAyT83LpymaHJBW4Mj2eeHogFPXj8
      QRaXvNntuRb3cPvqVfxz48z7s8hHVSItK6iCnkL3NhornPcP5aUBSoqLiMsGunt6adlWkdU1
      isvceKZGmPLLlBdlGEZhdfOTV49CIoRRkBmZWspKg6ukDIcJZvwSxY5Mo2EBnQmLEqW0voMi
      e+YTCQVRZHbsNr/56BOuXDhLIJ7FIr9GGyUlRYSXZikuye5FMDExQ2PHdkxpH/5IFkvNG+0U
      FzuZCWSZj1KSQEJHe3sHNeXL13fKzyqQIBKcHeJLfwB3ZTWtdZVZXENALwqY7YWIikKmXtcb
      C6hramFbY3PGa2YCeOYmmJn3sq2mFllREchcA6KRCrebkZlpitz1GWsAkGWVitIi9GbTsjk2
      K0JV8Hi86OxlVOtTWLOsApWVFnL5zFcIoo741BSlmTaoBQHVXEyhxYE+06BKVUUVjdgNSQYu
      XaSwrIbGmrL7h/PTAKKOrv49eIMRCktdWV3CvzSPs6KBpkrnk09+DCsZaHoYJRXbCHoWMVS0
      Is9fwxeRsGc6EzYZYuj2LdJFzYQDPqAqYx1VdQ0YC8tA0FFszfD7BZGSMjfIaXQmmZJix5PT
      PIRYOExRZS2R+WmaG7ZlfoFkCF/axOHWzCPKALw+P1abjVhSemCJ9rysAiEluXz1Nna7lYGB
      y1ldwu4oZGHiNpeuXCMUz80OL1Xb6vDNjhNImSh1ZLGmmdFCbUsXRWIMhzO79RDGBq8TSUGB
      2ZTdLNyEnysjC7gsAldujmSlQRQFpLSEfG++TsborZilAJeu3si8N00QKCmroLmtk56eHuor
      S5ZfOnM1TwFRj90sMjc3h8We3ZqcJpsTNXWHUCpFOtOif41IxCJIkoTVaocsqmEoEgnZSG/v
      9qzaIbNjgyz5IiSjk0RDDtpabegzHRTUGRGSQe5MpfF5o8z5aqkoXnl7RFFkqlp6ccWiiG1N
      mA3ZvHNl0t4JSmx6gkkVa6aR8akgH3xyhm31tdiL3cvaAflpAEGgqq6FoH8eW3F2q7ItTN1h
      0pNgd4uVYFzGlYNgtFAgQEl1I3Vl2VUdABZnJjALMTxhkUwnIQiiiZ1HXsCsU1mYmQQhi4fP
      YKWjpQF/NMnBjh0U2TJrhC5MjeIJ3ZvdqTfT0tSAyZBhlVKRURCYWwrSVJdhyGUywu2RMeLJ
      1L3wy40wEiyluHl7AFlxIC4NUve9YmsllFTUsU9nxR9N0ZThj7YWqKqKs6iYW2O38c4W0NrW
      js2cYXbrzOzeu5NEIkVZtSVjDWN37uCsrkVVBXwL0yhWNxZjhnmR8HNzKsDejgou3BrimV3b
      M0pesa2F4rCXS0Oz1BeZULMxodHBzudeISWD3ZZhQ9xQQF1DCxVV9SRjIQwFy8eE8tMAehPt
      jc1IRjtqFtUXNRUjmlJQRANOZwF64elXgeREmEhaxFJgBp0+yykAacZGxxAFCcFWQeu28oyS
      b9/ewtULFzDqRcQCN2XOLF4ERhtFhhQj4zOUlWUXeDI0OMT8YgQHYUSHG3Mm7SFVRQrNMTAW
      w63zE6nqprp45XUgQdRRICQ5d+sWKV8QY0kFh/f03j+enwZQUkzMeUhExhEsTqrcmfU/p+W7
      wTYWiwVEHbnYmy2ZiOIJxHA5LHiiMqZHbK/06AuEuHRjhHRwjiGfwL7dmXcF20uq2eOqQgXE
      LBwoJ3zcmZfo3bWHZMTPjD+7tZnr6mqZD9wkJtgpzHQkWFWYm5lmfiZCUWMdNZmaWFVRjVZK
      TSLGzt573dHfkZ+9QIIOMRXEXFJLQaYPDhANB/H5fPi8S/iDYeQcNIIvX75NXXkBN2fCOFU/
      U0sZjmCaHPT3deMsrmB7Q3l2VQfuzdXPqvgBJeZnxhsGBAQ5wexiZlFv3yLJKu6ycopLShAy
      7ccXddQ0d9De0si8x0s0lflgntfjxWCxEQ0uIhqWGyg/DSDqaWhsosTloKoy877vorIqSm0i
      wZhMaHGOlPr0b1PUySzMzZOMhVkIxLOZkAqpCHMRla62JmYmV75471qhL6qj1hLh0sAA10YW
      6e7IfD4SQEGBGVBZXJjP7mUkJ5kavUyxXSEcy6IbtLQUERGz2Yzxe3OJ8rMKJCW5MXCJVGkH
      urgXd3nmjeBYJIzVWUxBNMzI5CL9TeWrWj0gU/YcfA5VVWm8F8OS6QZ0ABidNJVbuHxjiNb2
      jiefv8YIgo6G9h6+jZnKqg8fkGQor6yh1mjMKjYDYyH15WVM+1LUNWcRk5CKMO1LcmBP9wOl
      YX6WADoDFZVu4t4Z7CWZlwBwdz6/MR1EsVXiKsgkZH5tEEURnU53/19WD48q4fOHMOpFfP7g
      2otcIYIgZP3wA0yM3GLJHyIai5FVAGLcw+zCIjUuE9FUFtOpdWZMSpgrV64w9r0p3flpAFVB
      sFXywtFDZNNxARDxLeBLQGB+CntxKbqn+PZfM6QY/oRIY10NnsWFXKvJGqtJz8LiAvNLXqRs
      qkAFRTR09BFSrPcDWTJCSSMWFNPb10dj9fIOlbw1wNz0BEuLC0zNZxeEkUzGEUUdJl2aWyNT
      OWkIrxqjg86GUqbmvHR1tudaTVbMzs5S19pJW2sH9RXFGU/Ii3smGF1KE4vF2dHbhc2UTUSY
      ETUyz/kLlxidXj6inp9tAEFHaWkpKiLlpdmNBJfVtmIMx5CkItAVbLzV6KQwX3xxHrvNQkyW
      iFGAq70u16oyZmhoiMqebQzNiJSrcxTXObFkMClQjgfxJ21E5udpaWnJsjqmYnUWEo4lSCSX
      zwvL0xJAZtHjxWTUs7DoyTh5LORnenqKiVsX+fLKBM5Cx1NtAK8J/imo6CKVTtDf3UXIn3k+
      5AOFVgO3JpdQIosEEmDOsFvbXFKHXfZQUVHB8Og4iXQWbQC9ma7enezqaSfgX16jyM9lUVCJ
      BHz4ghEKnC5KCzPZVQpGr51lLipQqo8yZ2rjyPbsgmpySnSJs4NziHICS4EFzE46m2pyrWpj
      IiW4fv064WgSu7uersbvBhXzzwCKRCDgZ3pqmqGRUbr3HKGpOrNuUFVVUWSZSGCBwfFF2ju7
      sGfTeNLY8KiRecaiNowpL+7Kmgdmw+ZfFSgZ5JtzA2Cworc4M3744V4Qi16Ps6SK3Tv7tId/
      C6NGvUz74kxPTj50Zbv8KwG4O4c8Fg4xfmcYXWE17fVZhERqaABq3M+VkVkEJY3BYMLuWh4P
      kJcG0NB4WuRfFUhD4yny/wNlha75cRnmyAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='44' name='Filter (Starts and Ends WIth)' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Filter above 2 Lakhs' width='192'>
      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
      yXpM/X/MqRvuF/5wDQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Filter with Parameter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Filter with Parameter 2' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='Filter with WildCards' width='144'>
      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
      NdX1kAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='Filters' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAB8CAYAAACGwDlBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbm0lEQVR4nO2dfVxU1b7/37czJ25CZnokxeSn5OGlRp6KSSbR8Wk0KDIrQaWkhqPT9YnK
      B0BUkERDPerxseOUkFOhAVe5HgqPcAFRCmz0Kqkp2cCFJERTNDA57NP6/TEDDMOTp51H6O73
      6zV/zF7ftfZeaz6z9tpr1nzWvwkhBAoKP5O77vQFKHRtFAEpyEIRkIIsFAEpyEIRkIIsFAEp
      yEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsFAEp
      yEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsFAEpyEIRkIIsVB0FmM3mf8V1KHRR
      /k0xV1CQg3ILU5CFIiAFWSgCUpCFIqDOTlYkarW6xSs4oax5XE0uy3Rq1JFZ7ZdnSSBYoybI
      aGmZ1loZdWcwhT3HaI0atWY002IO8K3UlCxDQBaMQY4ViyRLKmZ7kJpJm8/YxUrkx45BF1eA
      ZF9EXSmfxLzMeF81arWG0dNiOGB3dVJxEmEBvq2n1Z4n2xjNzADfFo0hXT5E/Mvj8VWrUfsG
      EGY8TvXPr+idRReP2Wy2e+USrxuOn5+7XZBEkdHIzReC8Gi3sGrSNmQxMmRMK2mtl1GwLoKj
      I9bz6REz5kMfE3afibDtTZ+t7B5IF29fuXh0Kk8Mrz/L9b0msmpsQRVJ7MjwYt48TbN5A8uu
      aBKZzo6DBZgL0ln3+Fcsi06mCkAqIH6OkZ9e/oh88yHe0X7NigUJWKViwTR/GQcYg+b3dQ5X
      VEHSgoUcH/Y2/1VgJv8/Z9MteQ7hyVVyq9o5qNjL3nteItit6ZBUbOTPFSEs8+vRbtbqA3Hs
      H7oCg2fL2ZvWyyjjzJmHmTxtEM4qwKkPI+a+xP+rqGiMuC23MJXvLAweuZj2VgASBQkmqoMM
      BDjUzzV4O6mxzzDIWQWq3zH8cQ+wWKwiOZJO+t2TMEwbgBNODDXMxb8qjbQiAA9CE/aw1jCO
      AU6OZz/DmTMe6KYM53cqcOrzDDq1RFHRGcfALohEQUIWgwN97b6IFST/6RyTlvnRrnykArYm
      ufGGwbOVyb+2ynDHL+AKpu1F1EpAXSWfbfuE7n6axojbNAZyI8gQQEXCu+SXJWPMeJhZhmEt
      LtzFxaXpjfQtqWkFuGg0eAGW4mKkYcMY1pCu6k9/tyoslhraR4Of3xWyUo9yWYK6yk/IMvcg
      IGDkL1a7O0Z1OruvBhI61O5Q2hoKn45lcvvqoWhzIt0WhTGslanj9spwC95C1L//GX+NGrXv
      K3zYN4yoMU2fm2wBZUXajYGCjDSMRlSaeczzOshKQwI1r7zOsy5tlyFdPkT8tKlsvB7M9lgd
      rYe64+4OVVUd3YpcGLN8K35nF+GnUeMbsIaqkL8Qqelw0r3Tc8a0l96B/k3tU5PFn7J9iGhf
      PWBJYOsNPWGtqafdMiSKjW/ybvcoMgrMmPN38fIPm3kzoWnMKbtVdfFm4nWtpfQgIPQ5jIYy
      goPbHtpV58fx6sJcXEO38Inh8Xa64TLKysBV49r+BUnFGPXzKJqUwCHjIJyqj7I57I/M+ffd
      GIPc2s/bmanJwnRWR1hY00dWlpzAgc+KOaDe0CxUrdZhNsc3vs9NSOD4AQlNmn1UFuosA5v8
      ctssI97sR27uo8xNGoQzgKoPIwwvsD8oC0uowTrYFj+bb8SOQG8RkdleyA4R6B0h2gqpP7dD
      TPcZLyIyr7ZMzFkqfPzXi5ONwUfEitH+Yv3J5mGZEd4icMc37Z7zZvobwnv6TvG/Hdap83Jh
      12yx4kh9+0Hf7BCB7X4gNjIjmrdZm2VcEB/NelGszPpW1NQLIeprxNcpYeKpsP3iB1vEHZ0H
      OmJKwDImkjhdK/3OyAAC/r4f455S6qjjjHEbGd398BvWMrQZrh54uBSQtqeUOkCqLWLnR5/T
      Y9gw3DvI2mmR8nn3wGACfW/9hiHlx6Iz2J5ofzZuBK99k3t3v8ZEjRr1yKdZmPcwq2OfbbyN
      yvgx1YIxKAiLoa1bGGAxEhRkwWCOp2WINX/L+Swd8bZ4qTiJBQu28VnlP3Ae9BRL/rQcvwdV
      tnKbxltNWeMxx+uoO5PC8re2kne+FsnpPgbrFhO/3I8Hu/4w6JbJjw2m8HkTC1ob9/yCKL/G
      /0qJjy9gUaRG/iC3AxQBKchC+S1MQRaKgBRkoQhIQRYdjrFu3Ljxr7gOhS6K0gMpyEIRkIIs
      FAEpyEIRkIIs/g9N7ncRSkyE/vE9pBm7MOkHQkkiIa8kUuoQptKtIjt6FNSdZfeyFZiOVVCL
      Mx66hawK19GvxScrcSFrLUvXZ2GpBWc3LW9uWcHE3gA5xGhjyLGLHqC3nZ86LhZl8J+mdD69
      7ssWo56B9tcho6YkhrxCYrOajSU2ewbfhIZy8EkjybMHN158wdvPsuo3b7Ev/Immk9aVcWD9
      W2zNKeZ6nQpnDx0LV4Wjs9VeOp/CkiVGCi/+o2VarYX85N2kfJrL9aeNtspauXYikbhVSRRe
      rMPpAR+Cly5D/+h9P7+q/zKukb41lxHBo8hrODRQjylP3yyqJHEOe4Y8CcAXm6Ix+8ST+rYH
      zv+4SKFxCYvffZCkxra3In2xgXlJ9xL5fgY+D/yG2ooyqrvZEsvL+U63irzoUS0vKWc9C7MH
      Mn/xIu7Z/nmLZNm3sLGxeeTlNbxiGasaxKtz/Plh/25yam1BlSkkZA7ltdeeaKbYkqQ4PmQK
      m9OyyctOIe4PZ3lr1T4uWWvMhjcT+GnqTjLzMtg48jyrl3xAiTUnSYveIouRPPGQw5roS/tY
      viAHt8g9ZOdlsyfSjZwFb5F+TW5Nbz/Xstby6ZAoXn2one+1VMCeL0eh16iAcr46O4SAKR62
      NcsP4GMIwr3yO4dMtWSmnGBi+Hx8HnACVDi7edDP2ZZcWYmq/4Otn29sFB+unG7L15LbsyZa
      oyd04GF2768EJL4wJVH9vB4/h07ANWgjH0b54eGsAlUvvB8dCCUl1u768wwO3P00+inuOOHE
      4FcNTLiUTvopgIGEvPM+K/WjcXes16kTnHhwLJO9e6FCRS9vA0GPfcGnBy/djqr+ckhfsCO5
      D3NeHdTubaFyXxI/TJhEHwD6M9H/KrvfO21bs3yRQuPf6K4b7pDrDF9Wj2PC4BbFAVB78SK9
      BwxsPbEDbtMgug/P6/34zpRIwbf7SMwcgj7Uq0XDODs7N72RLpCWfhTn4U8wFCg5fx7Jywuv
      hnRVP/r1vURpaS3tMmQwg0tzSDv2PRIg1dZxf9/enP3q7C9Wu18eiVPvfMg9YbPxak890ilS
      jgwhxL+p3foErmPR3Vt5YZwW7YTX+LjvbBaOcnbIWEPtTyXsnTcN/3FatNoJBC5O5IStV75y
      5So5MVq0Wi3aCQHMXL6f8xK3hOxBdE6MlpwY25sBenaZrIMs1ROv8drQKayZ/xn3Bm/G37FO
      dkjfH2Hz67FkdAtmy+qxtB7an/79IetSFdDOt6VPIDHRJSxdFsi4Wgmn7p481PsGkvsttsid
      oOQDjD++zIZ21QO1mUl8PTKM+Y1HJM4nRvL+/YvZm20bAyXFE2kKY2OIYxu5MSE8gtfdu+Mk
      1WJJiyZyewFJSzT0D0kgL8RWYm0Fx3bHsXxzf3YveKzDS5ctoLGxecSObS3lPvxmPE1i2LcE
      BbX9gV8rWMt/RB2m94x1pOofpe2hbjnl5dD7iQ7WRKOiny6K93VRjUdyYrSsdW5nVf8d5vAH
      H3AiS2Jcuv3RHLQ5TV9IKCH5r/cSvLmPXcznJB0exqwED9ua5Qfw0U/i05BcaCYgL7x6FlDn
      1h0nAJUzHlMCGBLyFeVomj9VObvhMzMQz9AvKecx+ndw7bd1Hkh1Xw+cccG5jd5HOp/Im1GH
      8Vz+IZsdxDNw0CBUp05xqjH4Ahe+682AAe10Za2epICCoyoeeWRox7F3iFHR2XYPInnkxY5l
      gH4XeaamR2apYA9fjtLT/M8lv2eIy3+TklthHQNJtVjSMijq08fhDL2ZqL3K1g25XKyzxaWm
      U/7kkwykhKTlqzlQfJ06sI6jtnzA108M71A8cIcnEj9P+oDSUQtYPraVfudJf/z+/imJqWXU
      UcfZ941k3qtjglfL0OZc4tSxYq7XAdL3HNuynQyVH4ET/knhdSoqSTFdZcIkR2H0IXDlPFxS
      X2fyOC3aiVOIyh9CzFJ/qNyN4dkN/I8t8r6ApSzq/QnzAmxxhRqiZg0GBvLirMc5vjaYAK0W
      rf+rvPNDMOtmWUfcJYkh1rGR9hUScxJ5RatFqw0h0fo43PGKxLZ/jbfOA5Xq27qFYZsEK0Wf
      F0vLkNbmkQDGEmuLb3MeqI3JNcbGkhfrRd6axbz9Nwu1khPdPcfyRmzT/NH/FSp3z2HdvW+z
      PuD2zn/JEJBCZ8a0NoWJ4YE49lm/NIqAFGSh/JiqIAtFQAqyUASkIAvlf2EKslB6IAVZKAJS
      kIUiIAVZKAJSkIUioM5GKz7OUnESYc+NRqNW4xsQhvF4a6bFFhKCNc1sBu1ptwyplvPZRqL/
      4zlGO/pMS5c5FN9gxexLQJgR+6xd1Cda4vJRY2ODtPCClopJCgvAV61GM3oaMQe+pROvBrKj
      FR9nqYD4qEK06z/liNlM9nvP8d1bMfzVwWu0Om0DWSNDGEMrdFCGxbSYuKP9CFk/mycdslYl
      h7Ptrjl8lG3GXHCQP2tPExXzVxpP37EfWlu0bXFXf2SFGD06QmQ2+KBd2CVm+MwV+xyc7L7Z
      MUO8GJ0uvq6pF6L+kihcEyi89R+Ji0IIUf+5WDl+tJi7u0TcFDfF6W3ThU/gDmE1ZssUS5+a
      LXbkfyduCiFuluwWc0ePFis/F0KIevH5yvFi9NzdouSmEDdPbxPTfQJFW45unYmrGQuFfts5
      UW9vQffNDvHGptPN4uozI0TYvh/sM4qF+m3iXH2miGhsIztupQwhhBCZIsLhA81ZOt2h7U6L
      TW80naNr+kT/qCEyfTuGEX1wApwGDGeYaw0WSxVwhPT0u5lkmMYAJ3AaamCufxVpVoPpzktb
      Ps6uffnpUxOfVNr+PFB3jQs/3U21peFGJVGwNQm3Nwy04h9+i2W0zciAoRw0fkKlbR3R+dSd
      nH1E1+hmf5vWOFh9ohMi3yV/zO/ZmfEws/52qz7Ry+x8og0tfKKPW2pgmEszK+Dq46lkWTzQ
      aVzBkkaxNAxDU0b693ej6riFGoa1YSF8p2nwcd7W0sfZ5Vlil59m3kvjiLlWh8q5H17evbh0
      t9X9UCraTGK3RWxrz8qugzLaQ6VZxs6bywjyjeF7uvHgC2+xK6rJdfe2LZJRaZZxYMNaJr3w
      GYbcrW36RDfZ/K5l7dZcptiOd1g1qZikOXPYXKVhxdYVJJttVen4S9XpyF02kkUHJEjSkNR4
      1GrDm5xswMM3kg//O9J2XCI/9nmydGMgdxkjFx1AIglNU0ay1FmYzcnNztGjrTLapYyE4O24
      J8XzN3Oc7ZgFY1AkHslWH8vbuspK1aMHLlzBpQ3xSMVG5izMZXBcKvEOTq0enp6o0oooQmft
      haRyyitc8fBwAarJWjaHzTVBmFIdum4PTzxVaRQVgc6akfLyClw9PDpp7wNj4gpo/HwAsiIJ
      shhINngAN7CcKaPXQ4O5z6mO0tRwVp57nu0xKiCOguYZiQyyYEg2OJyhvTLaw42hQ8+TYPof
      npj6GPc51VH5WRq5khsNvv9d0+a3bC8JWT0JjWvtvj+SgIC/s9+4h9I6qDtjZFtGd/w69Afu
      rHTjx7w4XhinRq0exx/T+rJ8e2gHu/IAFSZCdPGYb6GMpt0GIslq3F4qkixUaCJX43dqDZNG
      W/O+tP0aIZvn0LjC/J94SHAc2ss0Grfm9/Z2fDXF15/7SMx/ZoTw9vYR2qnRIqPcZrSdGdFK
      PjvD8fpz4qP5z4gR3t7CRztVRGeUiw4sun91XNilF3MdH3tvA8qv8b9SEuKS8FsWzO3e3EER
      kIIslJ8yFGShCEhBFoqAFGSh2PwqyELpgRRkoQhIQRaKgBRkoQhIQRaKgDoN1ziRuJjACVYL
      uoCZO/kKgFpOpSxnZsCEJgu6DQU0eoZeK2DDzAAmaLWM83+V1VkXWl99WXeRorTtLJoZgKHB
      m6UBqRbLoURWvT4N/5icZkm1p1JYbivfel0bKLAzLJUhoBISQ2y+eo2vGHKk87wXoiXoHXtP
      QomCt/15du0XDktayziweiYBE7RotePwf3U1WRfslrSeT2Fx4IRW0iS+P5bI4mn+jNNq0U4I
      ZHHiiaZGbWisV/0Z59AgnZXKlCXEfuXLmrRs8vLSSQqfwP0AXKHiR1/CTWlk5+WRnWZkyrU1
      rMqoBSpJWZ7Ab2ftJD0vj4Opi+m/dznvtmIHmbN+ISk/erN40Yv0dUgrSVrG2mN9mb56Jo72
      nFcqfsQ33ERadh552WkYp1xjzaoMGpwqu6jN72G2xRUx9M33ycjLI3PnVH5KXsKOLxoaax5G
      ixtjvXp2kbXQZ9m3zwVDzGSrYy1OdPd0b3JiDfHDs6czKqwWdLpRQ6mpuQF8xaluL2DweQAn
      QOX8MDMWj+J85qkWZxgb9SErp/vQmlvvwJCN/GWBHx7Ov2mR1n9iCH6ePa02wipn3HSjGFpT
      Q8PkTte0+b05nIUpG9HbGs7J3Ruv3rWUllqtfMdGpbB1wWSG9mrZIJ2SS1/y5cCJdGiiVned
      4kPvsDi1F/qnewN96VOWzAena61fFKmWK/V3UVNaehsuso7rxYd4Z3EqvfRP09t29DYtKLPa
      /JqiEykYNQhT5hD0abdq8xtuZ/Orb2Hze7K0Frycmzm5XjuRRk7pAMaqe9MlqanhtzXniZ35
      ZwqKr1OnctyyoMnNrad6DivXzuIRZ4DBzHrLnyXLpjCxohbJqTuemqH8/dKQX/TyShJDeMV6
      cuasXMusR5pav4vb/NZxdnckSxJKeSz6PWb8PK/szkG3h5kRE0ZMT2dUdRcp3L6Y2BQvjNP7
      AAPRm/LQS7VcsZj5OGYx5rnr0A9SoRoUyLo9gU3llJsIfe9W7DFvnYF6E3l6idorFswfx7DY
      PJd1eqsh+i87BjLZb8Rhtfm963vPDm1+ZwSuoXT8OlKNega37qhPo81vb5vNr3SelLApzNl/
      P3PfTyFa16vr7hwz0It+dbV0t41zcHoAn8ljuXn2q+ZxKmd6eo5mdtgwDie13LcCoPLIEVSD
      f9keyHZynHt6Mnp2GMMOJ9Fw9i5q83uNnJVv8k7NCxg/iP4VGGg+xtMDc1i9227LgrTD9NEM
      h/KDmNKKKLve8JecixSmH+Zmb+vt+tL501RYPX75/tgWopIfZEYLN9efSzkHTWkUldksgKnj
      YmE6h2/2vt1joFvDavO7HGNbNr9ro0lMfY7VUx6gxGbzu90LKP8vPsi5nxm79Azq6toBQIXX
      7BgmrV3KlIkWan/THU//Zaz3d4bah+hp2Uj4jjNWoTh1x3PsG6wLt218YUlhwfw8KmrB2c2b
      0HVvM8oZq83vrO+Y/dcFPNbCETeRnEQahxylMVrsZztycmKwuuWG81BPCxvDd3CmohYJm+vt
      unAatt3omja/OTFoW5nfse5xVdpi7ytbop3r+68fxeZXQRaKza9Cl0D5LUxBFoqAFGShCEhB
      Fsr/whRkofRACrJQBKQgC0VACrJQBKQgC0VAnYZqjhvDCLDZ6Y5/+S+cbkiqq+RE6ibmvzye
      EKOjBVs1xzeHMlpjc6tNKm59Fab0LWkRTc618fkNnrZZRKod3XbVqIMTKLNm5Nu0COt1aUYz
      LT6fZibDP98ZpjV/nwiRWX9ObAv0Fs82cwWtF0dWjBbjV37e3KfnZolIj35JjBvh3dIDSLTj
      DyTqxaXCHWL+JK3w8fYW3iOeEfN3HBNXG4tNF9EvjRMjvL2Ft49WTI3OEOWd3CDowkd68VRY
      itWxVtwU1V+ViApbWmb0i2Lxrnzx3ekdIsLBbvaHzAjxXFiKKLkpRP2lQrF++vPCwZBVCCHE
      Nzumi+nrC8WleiFulqSIsKfCxH5Hk1a7MmfvutCQUUyfvl4UWjOKlLCnRJhdxl+hze83YseM
      F0V0+tfCWmyhWBPoLfQfXfz5Vb3tnBabnm/7A23kG0cB/SD2zZ0hGj5rIaxtH7j+pEPGk2J9
      4ApxxO5LdGHXDDG3hc2vEEJcELtmN8WeXB8oVjTPKGbM3Scacv4KbX5dCd6eSuwzg7AWOxxr
      sZ3YfbPqBCc8/PH/p00cq6jiUR61c5FS+fjgXlHRMs71D/zBbumLm0bDb1vEgVSQQNbgQHxt
      sVVVrvyheUY0v62gIedtGgNZbX4rEt4lvywZY8bDzDLcqs2vxs7md1gLm1+LpQbuccHFrrAG
      m1+NxhVwoXmxqaQVuKDRdLhf+J2jpoa7awqJenk8vmrbWCPmAN92+JeSH/nxruaWx6hUqMrK
      mofduMENl5ZxFxzjqCZ991UCQxscEG9w44aLg0mqCtWFMhpyyhZQk0Gjutk+DSrNPOZ5HWSl
      IYGaV15v0+YXQLp8iPhpU9l4PZjtsbo23FTdcXeHqip7A+A6zpjmMG1+Np5x2wlt5jwpcflQ
      PNOmbuR68HZidZ3Vo9VGt0cI3bSfQ2Yz5kMfE+acQFRSyx6iOfdwz081NNv1QJKQ3N0dyu5G
      t5qWcf0c486Y2Ns70K4n7Ea3bjXUNM+I1M+dhpyyBaSLN2M2217JBjv30B4EhD7HXZcHExzc
      tqdodX4cUwJWYpm4hU9MBoa2uSa6jLIycHVtWBNdTJLhGUL39uSNj9OJ8/udXQ9XTX7cFAJW
      Wpi45RNMhqG0WWxnwGMYD96soXuvhjXRfRgxRcfNM2c6yOiKKyc4YaczqbCQMjdHZ0RXXKtO
      ctKuR6soKKC+WVwNWaaz6EI1ze4Urq5VnGyekYJ6t0bvxdu7JrpHD1xw7AKbsPeJNhoex36I
      5OHpiaqoiMYNCtr0iY7D70H7KksUG+ewMHcwcalGDI+3YiHc6VAzaVAWK0xFtjXRlXyWmktf
      X00H+VzQTXZj75pUSutAunyUzdtOMrKFpfEwJuvOsW3zUS5LUFeaypqk+3nKvleu2Mvee14i
      2EF7wybrOLdtM0etGUldk8T9T9ndJToY97f3SCDT5leInKU+wicis3UL3taewp7dJE4LIcT/
      7hTTvdvaQCVHLPXxERGZnfy53ZH6cpERPVVofbyF94hx4qW3j9imJdqwQ258Ir0qjm3S2/I9
      I8L32SyNL+wSM8a/Lb6wK39feIP1sV5sOmb/SFwvjqyY3urjvxD1onxfuHhmhHVKRL+pabpE
      CFk2vxaMQUFYDGbidW2FGAkKsmAwW23xW8vfYl4MHfG2eKk4iQULtvFZ5T9wHvQUS/603Nrb
      ZEWidtzXCvAwJJOsyyKotT2zdPGY27zQXx8VplBWd9/A1sm3twdWlnP8SlF8ohW6BP8fJ5Pc
      7MooCJAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Getting Chart with Tooltip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stacked Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stacked Column chart' width='192'>
      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
      skAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 6 sub-cat' width='192'>
      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
      MPVsamr383+W9sOg5rUOFAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
